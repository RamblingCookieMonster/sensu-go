/*
Copyright 2018 Sensu, Inc.

Permission is hereby granted, free of charge, to any person obtaining 
a copy of this software and associated documentation files (the "Software"), 
to deal in the Software without restriction, including without limitation 
the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the Software 
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in 
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE 
USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.sensu.sensu_go.internal.apis.rbac;

import "github.com/sensu/sensu-go/apis/meta/v1alpha1/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "rbac";

// ObjectMeta is metadata that all persisted resources must have, which includes all objects
// users must create.
// +freeze-api:resource-name objectMetas
message ObjectMeta {
  // Name must be unique within a namespace. Name is primarily intended for creation
  // idempotence and configuration definition.
  // +optional
  optional string name = 1;

  // Namespace defines the space within each name must be unique. An empty namespace is
  // equivalent to the "default" namespace, but "default" is the canonical representation.
  // Not all objects are required to be scoped to a namespace - the value of this field for
  // those objects will be empty.
  // +optional
  optional string namespace = 2;

  // UUID is the unique in time and space value for this object. It is generated by
  // the server on successful creation of a resource and is not allowed to change on PUT
  // operations.
  // 
  // Populated by the system.
  // Read-only.
  // +optional
  optional string uid = 3;

  // An opaque value that represents the internal version of this object that can
  // be used by clients to determine when objects have changed. May be used for optimistic
  // concurrency, change detection, and the watch operation on a resource or set of resources.
  // Clients must treat these values as opaque and passed unmodified back to the server.
  // They may only be valid for a particular resource or set of resources.
  // 
  // Populated by the system.
  // Read-only.
  // Value must be treated as opaque by clients and .
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
  // +optional
  optional string resourceVersion = 4;

  // CreationTimestamp is a timestamp representing the server time when this object was
  // created. It is not guaranteed to be set in happens-before order across separate operations.
  // Clients may not set this value. It is represented in RFC3339 form and is in UTC.
  // 
  // Populated by the system.
  // Read-only.
  // Null for lists.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
  // +optional
  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.Time creationTimestamp = 5;

  // DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
  // field is set by the server when a graceful deletion is requested by the user, and is not
  // directly settable by a client. The resource is expected to be deleted (no longer visible
  // from resource lists, and not reachable by name) after the time in this field, once the
  // finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
  // Once the deletionTimestamp is set, this value may not be unset or be set further into the
  // future, although it may be shortened or the resource may be deleted prior to this time.
  // For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
  // by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
  // the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
  // remove the pod from the API. In the presence of network partitions, this object may still
  // exist after this timestamp, until an administrator or automated process can determine the
  // resource is fully terminated.
  // If not set, graceful deletion of the object has not been requested.
  // 
  // Populated by the system when a graceful deletion is requested.
  // Read-only.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
  // +optional
  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.Time deletionTimestamp = 6;

  // Map of string keys and values that can be used to organize and categorize
  // (scope and select) objects. May match selectors of replication controllers
  // and services.
  // More info: http://kubernetes.io/docs/user-guide/labels
  // +optional
  map<string, string> labels = 8;

  // Annotations is an unstructured key value map stored with a resource that may be
  // set by external tools to store and retrieve arbitrary metadata. They are not
  // queryable and should be preserved when modifying objects.
  // More info: http://kubernetes.io/docs/user-guide/annotations
  // +optional
  map<string, string> annotations = 9;

  // The name of the cluster which the object belongs to.
  // This is used to distinguish resources with same name and namespace in different clusters.
  // This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
  // +optional
  optional string clusterName = 10;
}

// Time is a wrapper around time.Time which supports correct
// marshaling to YAML and JSON.  Wrappers are provided for many
// of the factory methods that the time package v1alpha1.
// 
// +protobuf.options.marshal=false
// +protobuf.as=Timestamp
// +protobuf.options.(gogoproto.goproto_stringer)=false
message Time {
}

// TypeMeta is type metadata.
// +freeze-api:resource-name typeMetas
message TypeMeta {
  optional string kind = 1;

  optional string apiVersion = 2;
}

// BindingSpec is a specification of a role binding
message BindingSpec {
  // Subjects holds references to the objects the role applies to
  repeated Subject subjects = 1;

  // RoleRef is the reference to a ClusterRole in the global namespace
  optional RoleRef roleRef = 2;
}

// ClusterRole is a role that applies to all Namespaces within
// a cluster.
// +freeze-api:resource-name clusterRoles
message ClusterRole {
  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.TypeMeta typeMeta = 3;

  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.ObjectMeta metadata = 1;

  optional RoleSpec spec = 2;
}

// ClusterRoleBinding grants the permissions defined in a ClusterRole referenced
// to a user or a set of users
// +freeze-api:resource-name clusterRoleBindings
message ClusterRoleBinding {
  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.TypeMeta typeMeta = 4;

  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.ObjectMeta metadata = 1;

  optional BindingSpec spec = 2;
}

// A Role applies only to a single Namespace.
// +freeze-api:resource-name roles
message Role {
  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.TypeMeta typeMeta = 3;

  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.ObjectMeta metadata = 1;

  optional RoleSpec spec = 2;
}

// RoleBinding grants the permissions defined in a Role referenced to a user or
// a set of users
// +freeze-api:resource-name roleBindings
message RoleBinding {
  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.TypeMeta typeMeta = 4;

  optional github.com.sensu.sensu_go.apis.meta.v1alpha1.ObjectMeta metadata = 1;

  optional BindingSpec spec = 2;
}

// RoleRef is used to map groups to Roles or ClusterRoles.
message RoleRef {
  // Type is the type of role being referenced.
  optional string type = 1;

  // Name is the name of the resource being referenced.
  optional string name = 2;
}

// RoleSpec is a specification of a role.
message RoleSpec {
  // Rules hold all of the Rules for this Role.
  repeated Rule rules = 1;
}

// A Rule holds information which describes an action that can be taken.
message Rule {
  // Verbs is a list of verbs that apply to all of the listed
  // resources for this rule. These include "get", "list", "watch",
  // "create", "update", "delete".
  // TODO: add support for "patch" (this is expensive and should be
  // delayed until a further release).
  // TODO: add support for "watch" (via websockets)
  repeated string verbs = 1;

  // APIGroups is the name of the APIGroup that contains the resource
  repeated string apiGroups = 2;

  // Resources is a list of resources that this rule applies to.
  // "*" represents all resources.
  // TODO: enumerate "resources"
  repeated string resources = 3;

  // ResourceNames is an optional list of resource names that the rule
  // applies to.
  repeated string resourceNames = 4;
}

// Subject contains a reference to the user identity a role binding applies to
// +freeze-api:resource-name subjects
message Subject {
  // Kind is the type of object referenced
  optional string kind = 1;

  // Name of the referenced object
  optional string name = 2;

  // Namespace the object is from
  optional string namespace = 3;

  // APIGroup the object belongs to
  optional string apiGroup = 4;
}

